{"version":3,"sources":["common/PopOverTopMenu/PopOverTopMenu.module.css","common/Popup/Popup.module.css","routes/previewMap/PreviewMap.module.css","common/YandexMap/YandexMap.module.css","core/functions/deepClone.ts","model/reducers.ts","model/images/1/image.svg","model/images/2/image.svg","model/images/3/image.svg","model/store.ts","model/images/2/1/image.svg","model/images/2/2/image.svg","model/images/2/3/image.svg","model/images/2/4/image.svg","model/images/2/5/image.svg","common/Button/Button.tsx","routes/tourSelect/TourSelect.tsx","model/actionCreators.ts","core/hooks/useSwipe.tsx","common/PlacePanel/PlacePanel.tsx","core/hooks/useCheckBoxTouch.tsx","common/PopOverTopMenu/img/trashbin.svg","common/PopOverTopMenu/img/trashbin_focused.svg","common/PopOverTopMenu/img/human.svg","common/Popup/Popup.tsx","common/PopOverTopMenu/PopOverTopMenu.tsx","core/hooks/useHeightChange.tsx","routes/previewTour/PreviewTour.tsx","common/YandexMap/images/userLocation.svg","common/YandexMap/YandexMap.tsx","core/hooks/useLocation.tsx","routes/previewMap/PreviewMap.tsx","index.tsx","routes/previewTour/PreviewTour.module.css","common/Button/Button.module.css","routes/tourSelect/TourSelect.module.css","common/PlacePanel/PlacePanel.module.css"],"names":["module","exports","deepClone","source","results","Array","isArray","P","selectTourReducer","userData","tourId","console","log","newUserData","selectedTourId","routeState","completeTourReducer","undefined","completedTouresId","includes","push","passRoutePointReducer","indexActive","findIndex","point","state","length","initialState","tours","id","name","image","tour1","description","places","coordinates","x","y","address","tour2","tour3","store","createStore","action","type","connect","viewStyle","text","to","onClick","className","buttonStyle","styles","main","secondary","with_image","add","delete","delete_outline","hint","back","cancel","info","info_white","location","plus","minus","back_to_location","button","text_container_gradient","text_container","text_container_hide","style","tourInfo","forEach","tour","finished","dispatch","selectTour","useState","focusedTourIndex","setFocusedTourIndex","silderRef","useRef","elementRef","swipedRight","swipedLeft","startClientX","currentClientX","onTouchMove","useCallback","e","current","touches","clientX","onTouchEnd","window","removeEventListener","onTouchStart","addEventListener","useEffect","elementRefValue","passive","useSwipe","tour_select","header_container","header_top","header_text","header_bot","placemark_image","town_name","tour_info_container","tour_name","tour_info","tour_images_container","ref","map","tour_image","tourI","tour_image_active","finished_mark","slider_container","tour_point","tour_point_active","passRoutePoint","imageSrc","number","onClickFunction","checkBoxRef","swipeElementRef","changeModelFunction","onTouch","checkBoxRefValue","useCheckBoxTouch","place_panel","number__disabled","number__deleted","number__default","blackout","img_active","img_default","img_deleted","main_img","place_info","checkbox__active","checkbox__default","checkbox__none","checkboxClassname","Popup","onPositiveClick","onNegativeClick","popup","popup_content","popup_message","popup_answers","positive_answer","negative_answer","popup_button_wrap","popup_button","currentTourIndex","tourName","getRoute","currentPlaces","setCurrentPlaces","deletedPlaces","setDeletedPlaces","popOverTopRef","dragging","setDragging","currentRoute","setCurrentRoute","popupState","setPopupState","activePlaceNameRef","currentStyle","setCurrentStyle","popOverTopMenuRef","changeRoute","array","from","activePlaceIndex","place","index","maxHeight","minHeight","minHeightInPx","document","documentElement","clientHeight","route","height","activeElementRef","setState","avgHeight","startObjectPositionY","isStartHeightDeclared","elementHeight","setElementHeight","currentHeightRef","startClientY","newHeight","clientY","heightProportion","screen","availHeight","transition","preventDefault","getBoundingClientRect","top","activeElementRefValue","useHeightChange","getPlaceState","find","placeState","placeId","placeList","draggableId","isDragDisabled","disableInteractiveElementBlocking","provided","snapshot","draggable_element","innerRef","draggableProps","dragHandleProps","deletedPlaceList","main_button_top","human","onDragEnd","result","destination","droppableId","deletedArray","splice","removed","onDragStart","pop_over_menu","pop_over_top","place_list","droppableProps","placeholder","delete_button","isDraggingOver","trashbin_focused","trashbin","deleted_place_list_header","isDropDisabled","deleted_place_list","main_button_bottom","currentCoordinatesX","currentCoordinatesY","activePlaceCoordinatesX","activePlaceCoordinatesY","navigator","geolocation","getCurrentPosition","crd","coords","latitude","longitude","err","enableHighAccuracy","timeout","maximumAge","open","getBottomButton","InfoPlacesList","close","info_places_list","button_close","info_container","general_info","tour_info_header","place_card","place_name","place_number","placeFinding","place_image","tourIndex","isInfoOpened","setIsInfoOpened","navigate","useNavigate","preview_tour_container","header","background_image","button_back","tour_info_click","info_text","button_info","button_look","mapRef","position","setPosition","error","setError","geo","watcher","watchPosition","pos","clearWatch","useLocation","CreateRoute","ymaps","indexOfRoute","pointsCoordsArray","multiRoute","routingMode","then","options","set","geoObjects","indexOf","ConnectedCreateRoute","useMemo","withYMaps","map_container","query","apikey","defaultState","center","zoom","controls","yandexMapDisablePoiInteractivity","instanceRef","button_container","zoom_container","setZoom","getZoom","duration","setCenter","geometry","iconLayout","iconImageHref","userLocation","iconImageSize","pixelRendering","setRoute","preview_map","top_menu","header_metric","metric","newRoute","rootElement","getElementById","ReactDOM","render","path","element"],"mappings":"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","file":"static/js/main.eb356a3e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pop_over_menu\":\"PopOverTopMenu_pop_over_menu__3Oqqw\",\"pop_over_top\":\"PopOverTopMenu_pop_over_top__exlQd\",\"place\":\"PopOverTopMenu_place__1OKzm\",\"place_list\":\"PopOverTopMenu_place_list__llkQG\",\"delete_button\":\"PopOverTopMenu_delete_button__3lU9G\",\"draggable_element\":\"PopOverTopMenu_draggable_element__3z-97\",\"deleted_place_list\":\"PopOverTopMenu_deleted_place_list__1ac2I\",\"deleted_place_list_header\":\"PopOverTopMenu_deleted_place_list_header__3pTWg\",\"main_button_top\":\"PopOverTopMenu_main_button_top__PrC_e\",\"main_button_bottom\":\"PopOverTopMenu_main_button_bottom__17ijr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Popup_popup__raNHr\",\"popup_content\":\"Popup_popup_content__13In4\",\"popup_message\":\"Popup_popup_message__1CHc1\",\"popup_answers\":\"Popup_popup_answers__14FeL\",\"popup_button_wrap\":\"Popup_popup_button_wrap__1NqgT\",\"positive_answer\":\"Popup_positive_answer__1VJ43\",\"negative_answer\":\"Popup_negative_answer__1y8fp\",\"popup_button\":\"Popup_popup_button__3EWEJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview_map\":\"PreviewMap_preview_map__3TXOf\",\"top_menu\":\"PreviewMap_top_menu__2n82B\",\"button_close\":\"PreviewMap_button_close__1xhJl\",\"header_metric\":\"PreviewMap_header_metric__1bpKp\",\"metric\":\"PreviewMap_metric__2G1EA\",\"map_container\":\"PreviewMap_map_container__2jODV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map_container\":\"YandexMap_map_container__27u6H\",\"button_container\":\"YandexMap_button_container__3bUVL\",\"zoom_container\":\"YandexMap_zoom_container__33Eok\"};","function deepClone <T> (source: T): { [k: string]: any } {\r\n    const results: { [k: string]: any } = Array.isArray(source) ? [] : {};\r\n    for (const P in source) {\r\n        if (typeof source[P] === 'object') {\r\n            results[P] = deepClone(source[P]);\r\n        }\r\n        else {\r\n            results[P] = source[P];\r\n        }\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\nexport { deepClone }","import { deepClone } from '../core/functions/deepClone';\r\nimport { userData, RoutePoint } from './types'\r\n\r\nfunction selectTourReducer(userData: userData, tourId: string): userData {\r\n    console.log('selectTourReducer')\r\n    const newUserData = deepClone(userData) as userData;\r\n    newUserData.selectedTourId = tourId;\r\n    newUserData.routeState = [];\r\n    return newUserData\r\n}\r\n\r\nfunction completeTourReducer(userData: userData): userData {\r\n    const newUserData = deepClone(userData) as userData;\r\n    if(newUserData.selectedTourId !== undefined && !newUserData.completedTouresId.includes(newUserData.selectedTourId)) {\r\n        newUserData.completedTouresId.push(newUserData.selectedTourId)\r\n    }\r\n    newUserData.selectedTourId = '';\r\n    newUserData.routeState = [];\r\n    return newUserData\r\n}\r\n\r\nfunction passRoutePointReducer(userData: userData): userData {\r\n    console.log('passRoutePointReducer')\r\n    const newUserData = deepClone(userData) as userData;\r\n    const indexActive = newUserData.routeState.findIndex(point => point.state === 'active');\r\n    newUserData.routeState[indexActive].state = 'finished';\r\n    if (indexActive !== newUserData.routeState.length - 1) {\r\n        newUserData.routeState[indexActive + 1].state = 'active';\r\n    }\r\n    return newUserData;\r\n}\r\n\r\nexport { selectTourReducer, completeTourReducer, passRoutePointReducer }","export default __webpack_public_path__ + \"static/media/image.00610e3a.svg\";","export default __webpack_public_path__ + \"static/media/image.0aba026c.svg\";","export default __webpack_public_path__ + \"static/media/image.ba0414de.svg\";","import { createStore } from 'redux';\r\nimport { State } from './types'\r\nimport { selectTourReducer, completeTourReducer, passRoutePointReducer } from './reducers';\r\nimport tour1 from './images/1/image.svg';\r\nimport tour2 from './images/2/image.svg';\r\nimport tour3 from './images/3/image.svg';\r\nimport tour2place1 from './images/2/1/image.svg'\r\nimport tour2place2 from './images/2/2/image.svg'\r\nimport tour2place3 from './images/2/3/image.svg'\r\nimport tour2place4 from './images/2/4/image.svg'\r\nimport tour2place5 from './images/2/5/image.svg'\r\n\r\nlet initialState: State = {\r\n    userData: {\r\n        selectedTourId: '2',\r\n        routeState: [],\r\n        completedTouresId: ['3'],\r\n    },\r\n    tours: [\r\n        {\r\n            id: '1',\r\n            name: 'Йошкар-Ола за 1 день',\r\n            image: tour1,\r\n            description: 'Постмотрите самые важные места Йошки всего за 1 день.',\r\n            places: [\r\n                {\r\n                    id: '1',\r\n                    name: 'Место',\r\n                    image: '',\r\n                    description: 'Описание.',\r\n                    coordinates: {x: 0, y: 0},\r\n                    address: ''\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: '2',\r\n            name: 'Лучшие места для фото',\r\n            image: tour2,\r\n            description: 'Привет! Это подборка самых фотогеиничных мест нашего города.',\r\n            places: [\r\n                {\r\n                    id: '1',\r\n                    name: 'Дом Бабочка',\r\n                    image: tour2place1,\r\n                    description: 'Получаются кадры как с обложек “Molchat Doma”',\r\n                    coordinates: {x: 56.62744065291153, y: 47.913865970552685},\r\n                    address: 'Ленинский проспект, 16'\r\n                },\r\n                {\r\n                    id: '2',\r\n                    name: 'Дом Флакон',\r\n                    image: tour2place2,\r\n                    description: 'Один из флагманов йошкар-олинских фото-мест.',\r\n                    coordinates: {x: 56.62829352962311, y: 47.90562035707867},\r\n                    address: 'Эшкинина, 2'\r\n                },\r\n                {\r\n                    id: '3',\r\n                    name: 'iSpring',\r\n                    image: tour2place3,\r\n                    description: 'Ну красота какая ну ты посмотри.',\r\n                    coordinates: {x: 56.629823857993706, y: 47.894747136134015},\r\n                    address: 'Вознесенская, 110'\r\n                },\r\n                {\r\n                    id: '4',\r\n                    name: 'Набережная улица',\r\n                    image: tour2place4,\r\n                    description: 'Дух Царевокошайска спрятан где-то здесь!',\r\n                    coordinates: {x: 56.641243, y: 47.906103},\r\n                    address: 'Набережная, 1',\r\n                },\r\n                {\r\n                    id: '5',\r\n                    name: 'Вараксинский мост',\r\n                    image: tour2place5,\r\n                    description: 'Не самое романтичное место, но самый романтичый вид на Йошкар-Олу, с которого можно увидеть всю многоликость нашего города.',\r\n                    coordinates: {x: 56.644361, y: 47.911259},\r\n                    address: 'Водопроводная'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: '3',\r\n            name: 'Гастрономический тур',\r\n            image: tour3,\r\n            description: 'Вот и тур по самым вкусным заведниям Красного Города.',\r\n            places: [\r\n                {\r\n                    id: '1',\r\n                    name: 'Место',\r\n                    image: '',\r\n                    description: 'Описание.',\r\n                    coordinates: {x: 0, y: 0},\r\n                    address: ''\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nexport type ActionType = {\r\n    type: string,\r\n    id?: string\r\n}\r\n\r\nfunction mainReducer(state: State = initialState, action: ActionType): State {\r\n    switch (action.type) {\r\n        case 'SELECT_TOUR': \r\n            if (action.id !== undefined) {\r\n                state.userData = selectTourReducer(state.userData, action.id);\r\n            }; break;\r\n        case 'COMPLETE_TOUR': state.userData = completeTourReducer(state.userData); break;\r\n        case 'PASS_ROUTE_POINT':  state.userData = passRoutePointReducer(state.userData);\r\n    }\r\n    //localStorage.setItem(\"savedUserData\", JSON.stringify(state.userData))\r\n    return state\r\n}\r\n\r\n\r\nlet store = createStore(mainReducer, initialState)\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport { store }","export default __webpack_public_path__ + \"static/media/image.325741ca.svg\";","export default __webpack_public_path__ + \"static/media/image.a5c29dd9.svg\";","export default __webpack_public_path__ + \"static/media/image.2cadef2a.svg\";","export default __webpack_public_path__ + \"static/media/image.53479c54.svg\";","export default __webpack_public_path__ + \"static/media/image.4a8aa785.svg\";","import { connect } from 'react-redux';\r\nimport styles from './Button.module.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface ButtonProps {\r\n    viewStyle: 'main' | 'secondary' | 'with_image' | 'add' | 'delete' | 'delete_outline'\r\n            | 'hint' | 'back' | 'cancel' | 'location' | 'plus' | 'minus' | 'back_to_location'\r\n            | 'info' | 'info_white',\r\n    text?: string,\r\n    to?: string,\r\n    image?: string,\r\n    onClick: () => void,\r\n    className?: string\r\n}\r\n\r\nconst Button = ({\r\n    viewStyle,\r\n    text = '',\r\n    to,\r\n    image = '',\r\n    onClick,\r\n    className = ''\r\n}: ButtonProps) => {\r\n    let buttonStyle = '';\r\n    switch(viewStyle) {\r\n        case 'main': {buttonStyle = styles.main; break}\r\n        case 'secondary': {buttonStyle = styles.secondary; break}\r\n        case 'with_image': {buttonStyle = styles.with_image; break}\r\n        case 'add': {buttonStyle = styles.add; break}\r\n        case 'delete': {buttonStyle = styles.delete; break}\r\n        case 'delete_outline': {buttonStyle = styles.delete_outline; break}\r\n        case 'hint': {buttonStyle = styles.hint; break}\r\n        case 'back': {buttonStyle = styles.back; break}\r\n        case 'cancel': {buttonStyle = styles.cancel; break}\r\n        case 'info': {buttonStyle = styles.info; break}\r\n        case 'info_white': {buttonStyle = styles.info_white; break}\r\n        case 'location': {buttonStyle = styles.location; break}\r\n        case 'plus': {buttonStyle = styles.plus; break}\r\n        case 'minus': {buttonStyle = styles.minus; break}\r\n        case 'back_to_location': {buttonStyle = styles.back_to_location; break}\r\n    }\r\n    return (\r\n        <button \r\n            type = 'button'\r\n            className = {`${styles.button} ${buttonStyle} ${className}`}\r\n            onClick = {onClick}\r\n        >\r\n            <div className = {(viewStyle === 'main' || viewStyle === 'secondary' || viewStyle === 'with_image') ? viewStyle === 'main' ? styles.text_container_gradient : styles.text_container : styles.text_container_hide}>\r\n                {\r\n                    to !== undefined ? <Link to={to}>{text}</Link> : <>{text}</>\r\n                }\r\n                {\r\n                    (viewStyle === \"with_image\")? <div className={styles.image} style={{\"backgroundImage\": `url(${image})`}}> </div> : null\r\n                }\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default connect()(Button)","import styles from './TourSelect.module.css';\r\nimport { connect } from \"react-redux\"\r\nimport Button from '../../common/Button/Button';\r\nimport { AppDispatch } from '../../model/store';\r\nimport { selectTour } from '../../model/actionCreators';\r\nimport { State } from '../../model/types';\r\nimport { useRef, useState } from 'react';\r\nimport { useSwipe } from '../../core/hooks/useSwipe';\r\n\r\ntype TourInfo = {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    image: string;\r\n    finished: boolean;\r\n}\r\n\r\ninterface ToolBarProps {\r\n    tours: Array<TourInfo>;\r\n    selectTour: (id: string) => void\r\n}\r\n\r\nconst TourSelect = ({ tours, selectTour }: ToolBarProps) => {\r\n    const [focusedTourIndex, setFocusedTourIndex] = useState(0);\r\n\r\n    const silderRef = useRef<HTMLDivElement>(null);\r\n\r\n    useSwipe({\r\n        elementRef: silderRef,\r\n        swipedRight: () => {\r\n            if (tours.length > focusedTourIndex + 1 && silderRef.current) {\r\n                setFocusedTourIndex(focusedTourIndex + 1);\r\n            }\r\n        },\r\n        swipedLeft: () => {\r\n            if (focusedTourIndex > 0 && silderRef.current) {\r\n                setFocusedTourIndex(focusedTourIndex - 1);\r\n            }\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={styles.tour_select}>\r\n            \r\n            <div className={styles.header_container}>\r\n                <div className={styles.header_top}>\r\n                    <h1 className={styles.header_text}> Туры от Гида </h1>\r\n                    <Button viewStyle='info' onClick={() => {}}/>\r\n                </div>\r\n                <div className={styles.header_bot}>\r\n                    <div className={styles.placemark_image}></div>\r\n                    <div className={styles.town_name}> Йошкар-Ола </div>\r\n                </div>                       \r\n            </div>\r\n\r\n            <div className={styles.tour_info_container}>\r\n                <h2 className={styles.tour_name}>{tours[focusedTourIndex].name}</h2>\r\n                <h3 className={styles.tour_info}>{tours[focusedTourIndex].description}</h3>\r\n            </div>\r\n\r\n            <div\r\n                className={styles.tour_images_container}\r\n                ref = {silderRef}\r\n                style = {{\r\n                    \"transform\": `translate(${focusedTourIndex * -300}px, 0)`,\r\n                    \"width\": `${390 + focusedTourIndex * 300}px`\r\n                }}\r\n            >\r\n                {\r\n                    tours.map((tour) => \r\n                        <div \r\n                            className={`${styles.tour_image} ${(tours.findIndex(tourI => tourI.id === tour.id) === focusedTourIndex) && styles.tour_image_active}`}\r\n                            style = {{\"backgroundImage\": `url(${tour.image})`}}\r\n                            key = {tour.id}\r\n                        >\r\n                            <Button text={tour.finished? \"Айда ещё!\": \"Вперёд!\"} viewStyle=\"main\" to=\"/previewtour\" onClick={() => {\r\n                                selectTour(tours[focusedTourIndex].id);\r\n                            }} />\r\n                            {\r\n                                tour.finished && <div className={styles.finished_mark}>Пройдено</div>\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <div className={styles.slider_container}>\r\n                {\r\n                    tours.map((tour) => \r\n                        <div\r\n                            className={`${styles.tour_point} ${(tours.findIndex(tourI => tourI.id === tour.id) === focusedTourIndex) && styles.tour_point_active}`}\r\n                            key = {tour.id}\r\n                        > </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    const tourInfo: Array<TourInfo> = [];\r\n    state.tours.forEach(tour => tourInfo.push({\r\n        id: tour.id,\r\n        name: tour.name,\r\n        description: tour.description,\r\n        image: tour.image,\r\n        finished: state.userData.completedTouresId.includes(tour.id)\r\n    }))\r\n    \r\n    return {\r\n        tours: tourInfo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => {\r\n    return {\r\n        selectTour: (id: string) => dispatch(selectTour(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TourSelect)","function selectTour(id: string) {\r\n    return {\r\n        type: 'SELECT_TOUR',\r\n        id\r\n    }\r\n}\r\n\r\nfunction completeTour() {\r\n    return {\r\n        type: 'COMPLETE_TOUR'\r\n    }\r\n}\r\n\r\nfunction passRoutePoint() {\r\n    return {\r\n        type: 'PASS_ROUTE_POINT'\r\n    }\r\n}\r\n\r\nexport { selectTour, completeTour, passRoutePoint }","import { useCallback, useEffect, useRef } from \"react\";\r\n\r\ninterface useSwipeProps {\r\n    elementRef: React.RefObject<HTMLElement>\r\n    swipedRight: () => void\r\n    swipedLeft: () => void\r\n}\r\n\r\nfunction useSwipe({ elementRef, swipedRight, swipedLeft }: useSwipeProps) {\r\n    const startClientX = useRef(0);\r\n    const currentClientX = useRef(0);\r\n\r\n    const onTouchMove = useCallback((e: TouchEvent) => {\r\n        currentClientX.current = e.touches[0].clientX;\r\n    }, [])\r\n\r\n    const onTouchEnd = useCallback((e: TouchEvent) => {\r\n        if (currentClientX.current > startClientX.current - 20 && currentClientX.current  !== 0) {\r\n            swipedLeft();\r\n            currentClientX.current = 0;\r\n        }\r\n        else if (currentClientX.current < startClientX.current - 20 && currentClientX.current  !== 0) {\r\n            swipedRight();\r\n            currentClientX.current = 0;\r\n        }\r\n\r\n        window.removeEventListener('touchend', onTouchEnd);\r\n        window.removeEventListener('touchmove', onTouchMove)\r\n    }, [swipedRight, swipedLeft, onTouchMove, currentClientX])\r\n\r\n    const onTouchStart = useCallback((e: TouchEvent) => {        \r\n        if (elementRef.current) {\r\n            window.addEventListener('touchend', onTouchEnd);\r\n            window.addEventListener('touchmove', onTouchMove);\r\n            startClientX.current = e.touches[0].clientX;\r\n        }\r\n    }, [elementRef, onTouchEnd, onTouchMove])\r\n    \r\n    useEffect(() => {\r\n        \r\n        let elementRefValue: HTMLElement;\r\n        if (elementRef.current) {\r\n            \r\n            elementRef.current.addEventListener('touchstart', onTouchStart, {passive: false});\r\n            elementRefValue = elementRef.current;\r\n        }\r\n    \r\n        return () => {\r\n            if (elementRefValue) {\r\n                elementRefValue.removeEventListener('touchstart', onTouchStart);\r\n            } \r\n        }\r\n    }, [onTouchStart, elementRef]);\r\n}\r\n\r\nexport { useSwipe }","import { useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useCheckBoxTouch } from '../../core/hooks/useCheckBoxTouch'\r\nimport { passRoutePoint } from '../../model/actionCreators'\r\nimport { AppDispatch } from '../../model/store'\r\nimport styles from './PlacePanel.module.css'\r\n\r\ninterface PlacePanelProps {\r\n    name: string,\r\n    address: string,\r\n    imageSrc: string,\r\n    state: \"default\" | \"active\" | \"finished\" | \"deleted\" | \"tourPreview\",\r\n    number: number,\r\n    onClickFunction: Function,\r\n    passRoutePoint: () => void\r\n}\r\n\r\nconst PlacePanel = ({\r\n    name, \r\n    address,\r\n    imageSrc,\r\n    state,\r\n    number,\r\n    onClickFunction,\r\n    passRoutePoint\r\n}: PlacePanelProps) => {\r\n    \r\n    let checkBoxRef = useRef(null)\r\n    const swipeElementRef = useRef<HTMLDivElement>(null)\r\n\r\n    useCheckBoxTouch({\r\n        checkBoxRef,\r\n        state: state,\r\n        onClickFunction,\r\n        changeModelFunction: () => passRoutePoint\r\n    })\r\n\r\n    let numberClassname = () => {\r\n        if (state === 'finished') {\r\n            return styles.number__disabled\r\n        } else if (state === 'deleted') {\r\n            return styles.number__deleted \r\n        } else {\r\n            return styles.number__default\r\n        }\r\n    }\r\n    let checkboxClassname = () => {\r\n        switch(state) {\r\n            case \"finished\":\r\n                return styles.checkbox__active;\r\n            case \"active\":\r\n                return styles.checkbox__default;\r\n            case \"default\":\r\n                return styles.checkbox__none;\r\n            case \"deleted\":\r\n                return styles.checkbox__none;\r\n            case \"tourPreview\":\r\n                return styles.checkbox__none;\r\n        }\r\n    }\r\n    let imgClassname = () => {\r\n        if (state === 'active') {\r\n            return styles.img_active\r\n        } else if (state === 'deleted') {\r\n            return ''\r\n        }\r\n        return styles.img_default    \r\n    }\r\n\r\n    return (\r\n        <div\r\n            className = {styles.place_panel}\r\n            ref={swipeElementRef}\r\n        >\r\n            { state !== \"tourPreview\" && \r\n            <div \r\n                className={numberClassname()} \r\n            >\r\n                {state === 'deleted' ? '' : number}\r\n            </div>}\r\n            {state === 'active' && <div className={styles.blackout}></div>}\r\n            <div className={imgClassname()}></div>\r\n            <div\r\n                className={state === 'deleted' ? styles.img_deleted : styles.main_img} \r\n                style = {{'background': `url(${imageSrc}) no-repeat center center / cover`}}  \r\n            >   \r\n            </div>\r\n            <div className={styles.place_info}>\r\n                <h3 className={styles.name}>{name}</h3>\r\n                <h4 className={styles.address}>{address}</h4>\r\n            </div>\r\n            <div \r\n                className={checkboxClassname()}\r\n                ref = {checkBoxRef}\r\n            >\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => {\r\n    return {\r\n        passRoutePoint: () => dispatch(passRoutePoint())\r\n    }\r\n}\r\n\r\nexport default connect(mapDispatchToProps)(PlacePanel)","import { useCallback, useEffect } from \"react\"\r\n\r\ninterface useCheckBoxTouchProps {\r\n    checkBoxRef: React.RefObject<HTMLDivElement>,\r\n    state: \"default\" | \"active\" | \"finished\" | \"deleted\" | \"tourPreview\",\r\n    onClickFunction: Function,\r\n    changeModelFunction: () => void\r\n} \r\n\r\nconst useCheckBoxTouch = ({\r\n    checkBoxRef,\r\n    state,\r\n    onClickFunction,\r\n    changeModelFunction\r\n}: useCheckBoxTouchProps) => {\r\n    const onTouch = useCallback((e: TouchEvent) => {\r\n        if (state === 'active') {\r\n            changeModelFunction()\r\n            onClickFunction()\r\n        }     \r\n    }, [state])\r\n\r\n    useEffect(() => {\r\n        let checkBoxRefValue: HTMLDivElement \r\n        if (checkBoxRef.current) {\r\n            checkBoxRef.current.addEventListener('touchstart', onTouch, {passive: false})\r\n            checkBoxRefValue = checkBoxRef.current\r\n        }\r\n        return () => {\r\n            if (checkBoxRefValue) {\r\n                checkBoxRefValue.removeEventListener('touchstart', onTouch)\r\n            }\r\n        }\r\n    }, [checkBoxRef, state, onTouch])\r\n}\r\n\r\nexport {useCheckBoxTouch}","export default __webpack_public_path__ + \"static/media/trashbin.37366568.svg\";","export default __webpack_public_path__ + \"static/media/trashbin_focused.cefb4af8.svg\";","export default __webpack_public_path__ + \"static/media/human.f6014a6b.svg\";","import { Link } from 'react-router-dom'\r\nimport styles from './Popup.module.css'\r\n\r\ninterface PopupProps {\r\n    state: 'question' | 'final'\r\n    name: string,\r\n    onClick: React.Dispatch<React.SetStateAction<'none' | 'question' | 'final'>>\r\n    onPositiveClick?: Function,\r\n    onNegativeClick?: Function\r\n}\r\n\r\nconst Popup = ({\r\n    state,\r\n    name,\r\n    onClick,\r\n    onPositiveClick,\r\n    onNegativeClick\r\n}: PopupProps) => {\r\n    if (!onPositiveClick) {\r\n        onPositiveClick = () => {}\r\n    }\r\n    if (!onNegativeClick) {\r\n        onNegativeClick = () => {}\r\n    }\r\n    const onPositive = () => {\r\n        onClick('none');\r\n        onPositiveClick!()\r\n    }\r\n    const onNegative = () => {\r\n        onClick('none');\r\n        onNegativeClick!()\r\n    }\r\n    const getMessage = () => {\r\n        if (state === 'question') {\r\n            return `Вы дошли до ${name}?`\r\n        }\r\n        return `Вы прошли тур ${name}`\r\n    }\r\n\r\n    return(\r\n        <div className={styles.popup}>\r\n            <div className={styles.popup_content}>\r\n                <div className={styles.popup_message}>\r\n                    {getMessage()}\r\n                </div>\r\n                {state === 'question' &&\r\n                    <div className={styles.popup_answers}>\r\n                        <button onClick={onPositive} className={styles.positive_answer}>Да</button>\r\n                        <button onClick={onNegative} className={styles.negative_answer}>Нет</button>\r\n                    </div> \r\n                }\r\n                {state === 'final' &&\r\n                    <div className={styles.popup_button_wrap}>\r\n                        <button className={styles.popup_button}>\r\n                            <Link to={'/'}>На главную</Link>\r\n                        </button>\r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Popup}","import { connect } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useHeightChange } from '../../core/hooks/useHeightChange';\r\nimport styles from './PopOverTopMenu.module.css';\r\nimport PlacePanel from '../PlacePanel/PlacePanel';\r\nimport { AppDispatch } from '../../model/store';\r\nimport { PointInfo, RoutePoint, State } from '../../model/types';\r\nimport type { Place } from '../../model/types';\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport trashbin from './img/trashbin.svg'\r\nimport trashbin_focused from './img/trashbin_focused.svg'\r\nimport human from './img/human.svg'\r\nimport Button from '../Button/Button';\r\nimport { Popup } from '../Popup/Popup';\r\n\r\n\r\ninterface PopOverTopMenuProps {\r\n    tourName?: string,\r\n    style?: 'closed' | 'opened',\r\n    places: Array<Place>,\r\n    routeState: Array<RoutePoint>,\r\n    state: 'preview' | 'editable' | 'active',\r\n    getRoute?: (route: Array<PointInfo>) => void\r\n}\r\n\r\nconst PopOverTopMenu = ({\r\n    tourName = '',\r\n    style,\r\n    places,\r\n    routeState,\r\n    state,\r\n    getRoute\r\n}: PopOverTopMenuProps) => {\r\n    if (!style) {\r\n        style = 'closed'\r\n    }\r\n\r\n    const [currentPlaces, setCurrentPlaces] = useState(places)\r\n    const [deletedPlaces, setDeletedPlaces] = useState<Array<Place>>([])\r\n    const popOverTopRef = useRef(null)\r\n    const [dragging, setDragging] = useState(false)\r\n    const [currentRoute, setCurrentRoute] = useState(routeState)\r\n    const [popupState, setPopupState] = useState<'none' | 'question' | 'final'>('none');\r\n    const activePlaceNameRef = useRef<string>('места')\r\n    const [currentStyle, setCurrentStyle] = useState(style)\r\n    const popOverTopMenuRef = useRef(null)\r\n\r\n    const changeRoute = () => {\r\n        const array = Array.from(currentRoute)\r\n        let activePlaceIndex: number = 0 \r\n        array.map((place, index)  => {\r\n            if (place.state === 'active') {\r\n                place.state = 'finished'\r\n                activePlaceIndex = index\r\n                return\r\n            }\r\n        })\r\n        if (activePlaceIndex + 1 < array.length) {\r\n            array[activePlaceIndex + 1].state = 'active'\r\n        } else {\r\n            setPopupState('final')\r\n        }\r\n        setCurrentRoute(array)\r\n    }\r\n\r\n\r\n    const maxHeight = () => {\r\n        switch (state) {\r\n            case 'preview':\r\n                return 97.27;\r\n            case 'editable':\r\n                return 86.5;\r\n            case 'active':\r\n                return 86.5;\r\n        };\r\n    }    \r\n    const avgHeight = 60;\r\n    const minHeight = () => {\r\n        switch (state) {\r\n            case 'preview':\r\n                return 37.94;\r\n            case 'editable':\r\n                return 22;\r\n            case 'active':\r\n                return 22;\r\n        }\r\n    };\r\n    \r\n    const minHeightInPx = document.documentElement.clientHeight * minHeight() / 100\r\n    \r\n\r\n    useEffect(() => {\r\n        if (currentStyle === 'closed' && state === 'editable' && getRoute !== undefined) {\r\n            const route: Array<PointInfo> = [];\r\n            currentPlaces.forEach(place => {route.push({coordinates: [place.coordinates.x, place.coordinates.y], state: \"default\"})})\r\n            getRoute(route);\r\n        }\r\n    \r\n        return () => { }\r\n    }, [currentStyle]);\r\n\r\n    let height = '';\r\n    switch (currentStyle) {\r\n        case 'closed': {\r\n            height = `${minHeight()}vh`\r\n            break;\r\n        }\r\n        case 'opened': {\r\n            height = `${maxHeight()}vh`;\r\n        }\r\n    }\r\n\r\n    useHeightChange({\r\n        elementRef: popOverTopMenuRef,\r\n        activeElementRef: state === 'editable' ? popOverTopRef : popOverTopMenuRef,\r\n        setState: setCurrentStyle,\r\n        avgHeight,\r\n        maxHeight: maxHeight(),\r\n        minHeight: minHeight()\r\n    })\r\n\r\n    const getBottomButton = () => {\r\n      \r\n        switch (state) {\r\n            case 'preview':\r\n                return null;\r\n            case 'editable':\r\n                return (\r\n                    <Button \r\n                        viewStyle='with_image'\r\n                        image={human}\r\n                        onClick={() => {}}\r\n                        text='Начать'\r\n                    />\r\n                );\r\n            case 'active':\r\n                let activePlaceIndex = currentRoute.findIndex(place => place.state === 'active')\r\n                if (activePlaceIndex === -1) {\r\n                    activePlaceIndex = routeState.length - 1\r\n                }\r\n                activePlaceNameRef.current = places[activePlaceIndex].name\r\n                const activePlaceCoordinatesX = places[activePlaceIndex].coordinates.x;\r\n                const activePlaceCoordinatesY = places[activePlaceIndex].coordinates.y; \r\n                let currentCoordinatesX: number;\r\n                let currentCoordinatesY: number;\r\n                navigator.geolocation.getCurrentPosition(\r\n                    (crd) => {\r\n                        currentCoordinatesX = crd.coords.latitude; \r\n                        currentCoordinatesY = crd.coords.longitude\r\n                    }, \r\n                    (err) => {\r\n                    }, \r\n                    {\r\n                        enableHighAccuracy: true, \r\n                        timeout: 5000, maximumAge: 0\r\n                    }\r\n                )\r\n                return (\r\n                    <Button\r\n                        viewStyle='with_image'\r\n                        onClick={() => {\r\n                            window.open(`https://yandex.ru/maps/?rtext=${currentCoordinatesX},${currentCoordinatesY}~${activePlaceCoordinatesX},${activePlaceCoordinatesY}&rtt=pd`)\r\n                            setPopupState('question')\r\n                        }}\r\n                        text={`Маршрут до точки ${activePlaceIndex + 1}`}\r\n                    />\r\n                )\r\n        }\r\n    }\r\n\r\n    const getPlaceState = (place: Place) => {\r\n        switch (state) {\r\n            case 'preview':\r\n                return \"tourPreview\";\r\n            case 'editable':\r\n                return \"default\";\r\n            case 'active': {\r\n                return currentRoute.find(placeState => placeState.placeId === place.id)!.state\r\n            }\r\n        } \r\n    }\r\n\r\n    const placeList = currentPlaces.map((place, index) => \r\n        <li key={place.id} className = {styles.place}>\r\n            <Draggable\r\n                key={place.id} \r\n                draggableId={place.id} \r\n                index={index}\r\n                isDragDisabled={state !== 'editable' || currentStyle === 'closed' || currentPlaces.length === 1}\r\n                disableInteractiveElementBlocking\r\n            >\r\n                {(provided, snapshot) => (\r\n                    <div\r\n                        className={styles.draggable_element}\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                    >                        \r\n                        <PlacePanel\r\n                            name = {place.name}\r\n                            address={place.address}\r\n                            imageSrc={place.image}\r\n                            state={getPlaceState(place)}\r\n                            number={index + 1}\r\n                            onClickFunction={changeRoute}\r\n                        />     \r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        </li> \r\n    )\r\n\r\n    const deletedPlaceList = deletedPlaces.map((place, index) => \r\n        <li key={place.id} className = {styles.place}>\r\n            <Draggable\r\n                key={place.id} \r\n                draggableId={place.id} \r\n                index={index}\r\n                isDragDisabled={state !== 'editable' || currentStyle === 'closed'}\r\n                disableInteractiveElementBlocking\r\n            >\r\n                {(provided, snapshot) => (\r\n                    <div\r\n                        className={styles.draggable_element}\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                    >                        \r\n                        <PlacePanel\r\n                            name = {place.name}\r\n                            address={place.address}\r\n                            imageSrc={place.image}\r\n                            state='deleted'\r\n                            number={index + 1}\r\n                            onClickFunction={() => {}}\r\n                        />     \r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        </li> \r\n    )\r\n\r\n    const onDragEnd = (result: any) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        const destination = result.destination.droppableId;\r\n        const source = result.source.droppableId;\r\n        const array = Array.from(currentPlaces);\r\n        const deletedArray = Array.from(deletedPlaces);\r\n\r\n        if (source === 'droppableActive') {\r\n            if (destination === 'droppableActive') {\r\n                const [removed] = array.splice(result.source.index, 1)\r\n                array.splice(result.destination.index, 0, removed)    \r\n            } else if (destination === 'droppableDeleted') {\r\n                const [removed] = array.splice(result.source.index, 1)\r\n                deletedArray.push(removed)    \r\n            }\r\n        } else if (source === 'droppableDeletedPlaces') {\r\n            if (destination === 'droppableActive') {\r\n                const [removed] = deletedArray.splice(result.source.index, 1)\r\n                array.push(removed)\r\n            } else if (destination === 'droppableDeletedPlaces') {\r\n                const [removed] = deletedArray.splice(result.source.index, 1)\r\n                deletedArray.splice(result.destination.index, 0, removed)\r\n            }\r\n        }\r\n        \r\n        setCurrentPlaces(array)\r\n        setDeletedPlaces(deletedArray)\r\n        setDragging(false)\r\n    }\r\n\r\n    const getTrashBinImage = (isDraggingOver: boolean) => {\r\n        if (!dragging) {\r\n            return ''\r\n        }\r\n        return isDraggingOver ? trashbin_focused : trashbin\r\n    }\r\n\r\n    const onDragStart = (result: any) => {\r\n        console.log(result)\r\n        setDragging(result.source.droppableId === 'droppableActive')\r\n    } \r\n\r\n    return(\r\n        <div>\r\n            {state === 'editable' && <div \r\n                className={styles.main_button_top}\r\n                style={{'transform': `translateY(${-minHeightInPx-13}px)`}}\r\n            >\r\n                <Button\r\n                    viewStyle='with_image'\r\n                    image={human}\r\n                    text='Начать'\r\n                    onClick={() => {}}\r\n                />\r\n            </div>}\r\n            <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart}>\r\n                <div\r\n                    ref = {popOverTopMenuRef}\r\n                    className = {styles.pop_over_menu}\r\n                    style = {{\r\n                        'height': `${height}`\r\n                    }}\r\n                >   \r\n                    <div>\r\n                        <div\r\n                            className = {styles.pop_over_top}\r\n                            ref = {popOverTopRef}\r\n                        >\r\n                        </div>\r\n                        \r\n                        <Droppable droppableId='droppableActive' >\r\n                            {(provided, snapshot) => (\r\n                                <ul \r\n                                    className={styles.place_list}\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}\r\n                                >\r\n                                    {placeList}\r\n                                    {provided.placeholder}\r\n                                </ul>\r\n                            )}\r\n                        </Droppable>\r\n                        <Droppable droppableId='droppableDeleted'>\r\n                            {(provided, snapshot) => (\r\n                                <div\r\n                                    className={styles.delete_button}\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}\r\n                                    style={{'background': `url(${getTrashBinImage(snapshot.isDraggingOver)}) no-repeat center center`}}\r\n                                >\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                        \r\n                        {deletedPlaceList.length !== 0 && <h2 className={styles.deleted_place_list_header}>Убрано из тура</h2>}\r\n                        <Droppable droppableId='droppableDeletedPlaces' isDropDisabled={true}>\r\n                            {(provided, snapshot) => (\r\n                                <ul\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}\r\n                                    className={styles.deleted_place_list}\r\n                                >\r\n                                    {deletedPlaceList}\r\n                                    {provided.placeholder}\r\n                                </ul>\r\n                            )}        \r\n                        </Droppable>\r\n                    </div>  \r\n                    {(!dragging && currentStyle==='opened') && <div\r\n                        className={styles.main_button_bottom}\r\n                    >\r\n                        {getBottomButton()}   \r\n                    </div>}  \r\n                </div>    \r\n            </DragDropContext>\r\n            {popupState !== 'none' && <Popup\r\n                state={popupState} \r\n                name={popupState === 'question' ? activePlaceNameRef.current : tourName}\r\n                onClick={setPopupState} \r\n                onPositiveClick={changeRoute}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    const currentTourIndex = state.tours.findIndex(tour => tour.id === state.userData.selectedTourId)\r\n    const placesInfo = state.tours[currentTourIndex].places;\r\n    const routeStateInfo = state.userData.routeState\r\n\r\n    return {\r\n        places: placesInfo,\r\n        routeState: routeStateInfo\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(PopOverTopMenu);","import { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\ninterface useHeightChangeProps {\r\n    elementRef: React.RefObject<HTMLDivElement>,\r\n    activeElementRef: React.RefObject<HTMLDivElement>,\r\n    setState: React.Dispatch<React.SetStateAction<\"closed\" | \"opened\">>\r\n    avgHeight: number\r\n    maxHeight: number\r\n    minHeight: number\r\n}\r\n\r\nexport function useHeightChange({\r\n    elementRef,\r\n    activeElementRef,\r\n    setState,\r\n    maxHeight,\r\n    minHeight,\r\n    avgHeight\r\n}: useHeightChangeProps) {\r\n    const startObjectPositionY = useRef<number>(0);\r\n    let isStartHeightDeclared = useRef(false);\r\n\r\n    const [elementHeight, setElementHeight] = useState(startObjectPositionY.current)\r\n    const currentHeightRef = useRef(0)\r\n    const startClientY = useRef(0); \r\n\r\n    const onTouchMove = useCallback((e: TouchEvent) => {\r\n        let newHeight = startObjectPositionY.current - e.touches[0].clientY + startClientY.current;\r\n        const heightProportion = newHeight / window.screen.availHeight * 100;\r\n        if (heightProportion > maxHeight) {\r\n            newHeight = document.documentElement.clientHeight * maxHeight / 100\r\n        }\r\n        if (heightProportion < minHeight) {\r\n            newHeight = document.documentElement.clientHeight * minHeight / 100\r\n        } \r\n        \r\n        setElementHeight(newHeight)\r\n        currentHeightRef.current = newHeight\r\n    }, [setElementHeight, minHeight, maxHeight])\r\n    \r\n    const onTouchEnd = useCallback((e: TouchEvent) => {\r\n        if (elementRef.current) {\r\n            elementRef.current.style.transition = '.5s'\r\n        }\r\n        const heightProportion = currentHeightRef.current / window.screen.availHeight * 100;\r\n        if (heightProportion < avgHeight) {\r\n            setState('opened')\r\n            setState('closed')\r\n        } else {\r\n            setState('closed')\r\n            setState('opened')\r\n        }\r\n        window.removeEventListener('touchmove', onTouchMove)\r\n        window.removeEventListener('touchend', onTouchEnd)\r\n        isStartHeightDeclared.current = false;\r\n    }, [onTouchMove, setState, avgHeight, elementRef])\r\n\r\n    const onTouchStart = useCallback((e: TouchEvent) => {\r\n        e.preventDefault()\r\n        if (activeElementRef.current && elementRef.current) {\r\n            elementRef.current.style.transition = '0s'\r\n            startObjectPositionY.current = document.documentElement.clientHeight - elementRef.current?.getBoundingClientRect().top\r\n            isStartHeightDeclared.current = true;\r\n            window.addEventListener('touchend', onTouchEnd);\r\n            window.addEventListener('touchmove', onTouchMove);\r\n            startClientY.current = e.touches[0].clientY;\r\n        }    \r\n    }, [activeElementRef, elementRef, onTouchEnd, onTouchMove])\r\n    \r\n    useEffect(() => {\r\n        if (elementRef.current && isStartHeightDeclared.current) {\r\n           elementRef.current.style.height = `${elementHeight}px`\r\n        } \r\n    }, [elementHeight, setElementHeight, elementRef])\r\n\r\n    useEffect(() => {\r\n        let activeElementRefValue: HTMLDivElement;\r\n        if (activeElementRef.current && elementRef.current) {\r\n            activeElementRef.current.addEventListener('touchstart', onTouchStart)\r\n            activeElementRefValue = activeElementRef.current;\r\n        } \r\n        return () => {\r\n            if (activeElementRefValue) {\r\n                activeElementRefValue.removeEventListener('touchstart', onTouchStart)\r\n            }\r\n        }\r\n    }, [onTouchStart, elementRef, activeElementRef])\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Button from '../../common/Button/Button';\r\nimport { State, Tour } from '../../model/types';\r\nimport styles from './PreviewTour.module.css';\r\nimport PopOverTopMenu from '../../common/PopOverTopMenu/PopOverTopMenu';\r\nimport { useState } from 'react';\r\n\r\ninterface PreviewTourProps {\r\n    tour: Tour;\r\n}\r\n\r\nconst PreviewTour = ({ tour }: PreviewTourProps) => {\r\n\r\n    const [isInfoOpened, setIsInfoOpened] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className={styles.preview_tour_container}>\r\n\r\n            <div className={styles.header}>\r\n                <div \r\n                    className = {styles.background_image}\r\n                    style = {{\"backgroundImage\": `url(${tour.image})`}}\r\n                > </div>\r\n                <Button viewStyle='back' className={styles.button_back} onClick={() => {navigate(\"/\")}}/>\r\n\r\n                <div \r\n                    className = {styles.tour_image}\r\n                    style = {{\"backgroundImage\": `url(${tour.image})`}}\r\n                > </div>\r\n\r\n                <div className={styles.tour_name} >{tour.name}</div>\r\n\r\n                <div className = {styles.tour_info_click} onClick={() => setIsInfoOpened(true)} >\r\n                    <div className={styles.info_text}>Прочитать описание</div>\r\n                    <Button viewStyle='info_white' className={styles.button_info} onClick={() => {}} />\r\n                </div>\r\n\r\n                <Button text=\"Посмотреть на карте\" viewStyle=\"main\" to=\"/previewmap\" onClick={() => {}} className={styles.button_look} />\r\n\r\n            </div>\r\n\r\n            <PopOverTopMenu state='preview' />\r\n            {\r\n                isInfoOpened && <InfoPlacesList tour={tour} close={() => setIsInfoOpened(false)} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface InfoPlacesListProps {\r\n    tour: Tour;\r\n    close: () => void;\r\n}\r\n\r\nconst InfoPlacesList = ({ tour, close }: InfoPlacesListProps) => {\r\n\r\n    return (\r\n        <div className={styles.info_places_list}>\r\n            <Button viewStyle='delete' onClick={close} className={styles.button_close} />\r\n            <div className={styles.info_container}>\r\n                <div className={styles.general_info}>\r\n                    <div className={styles.tour_info_header}>Тур: {tour.name}</div>\r\n                    <div className={styles.description}>{tour.description}</div>\r\n                </div>\r\n\r\n                {\r\n                    tour.places.map(place => \r\n                        <div className={styles.place_card} key={place.id}>\r\n                            <div className={styles.general_info}>\r\n                                <div className={styles.place_name}>\r\n                                    <div className={styles.place_number}>{tour.places.findIndex(placeFinding => placeFinding.id === place.id) + 1}</div>\r\n                                    {place.name}\r\n                                </div>\r\n                                <div className={styles.description}>{place.description}</div>\r\n                            </div>\r\n                            <div className={styles.place_image} style={{\"backgroundImage\": `url(${place.image})`}}>\r\n                            \r\n                            </div>\r\n                        </div>    \r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    const tourIndex = state.tours.findIndex(tour => tour.id === state.userData.selectedTourId);\r\n    return {\r\n        tour: state.tours[tourIndex]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PreviewTour);","export default __webpack_public_path__ + \"static/media/userLocation.54b6d9f6.svg\";","import { useEffect, useMemo, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { YMaps, Map, Placemark, withYMaps } from 'react-yandex-maps';\r\nimport styles from './YandexMap.module.css';\r\nimport Button from '../Button/Button';\r\nimport { useLocation } from '../../core/hooks/useLocation';\r\nimport userLocation from './images/userLocation.svg'\r\nimport { PointInfo } from '../../model/types';\r\n\r\n\r\ninterface YandexMapProps {\r\n    routeState: Array<PointInfo>\r\n}\r\n\r\nconst YandexMap = ({ routeState }: YandexMapProps) => {   \r\n    const mapRef = useRef<any>(null);\r\n\r\n    const { x, y, error } = useLocation();\r\n\r\n    const CreateRoute = ({ ymaps, route, x, y }: any) => {\r\n        const indexOfRoute = useRef<number>(-1);\r\n        const pointsCoordsArray: Array<Array<number>> = [];\r\n\r\n        useEffect(() => {\r\n            if (x !== undefined && y !== undefined) {\r\n                pointsCoordsArray.push([x, y]);\r\n            }\r\n            route.forEach((point: any) => pointsCoordsArray.push(point.coordinates))\r\n            ymaps.route(\r\n                pointsCoordsArray,\r\n                {\r\n                    multiRoute: true,\r\n                    routingMode: \"pedestrian\"\r\n                }\r\n            ).then((route: any) => {\r\n                route.options.set(\"mapStateAutoApply\", true);\r\n                mapRef.current.geoObjects.splice(indexOfRoute.current, 1);\r\n                mapRef.current.geoObjects.add(route);\r\n                indexOfRoute.current = mapRef.current.geoObjects.indexOf(route);\r\n            })\r\n            return () => {}\r\n        }, [ymaps, route]);\r\n        return ( <> </> )\r\n    }\r\n\r\n    const ConnectedCreateRoute = useMemo(() => {\r\n        return withYMaps(CreateRoute, true, ['route'])\r\n    }, [routeState])\r\n    \r\n\r\n    return (\r\n        <div className={styles.map_container}>\r\n            <YMaps\r\n                query = {{\r\n                    apikey: '69b35853-10e5-483a-928c-fb414a02a744'\r\n                }}\r\n            >\r\n                <Map\r\n                    defaultState = {{ \r\n                        center: [56.64, 47.89], \r\n                        zoom: 13,\r\n                        controls: []\r\n                    }}\r\n                    options = {{\r\n                        yandexMapDisablePoiInteractivity: true\r\n                    }}\r\n                    className = {styles.map_container}\r\n                    instanceRef = {(ref) => {mapRef.current = ref;}}\r\n                >\r\n                    <div className={styles.button_container}>\r\n                        <div className={styles.zoom_container}>\r\n                            <Button\r\n                                viewStyle='plus'\r\n                                onClick={() => mapRef.current.setZoom(mapRef.current.getZoom() + 1, { duration: 250 })}\r\n                            />\r\n                            <Button\r\n                                viewStyle='minus'\r\n                                onClick={() => mapRef.current.setZoom(mapRef.current.getZoom() - 1, { duration: 250 })}\r\n                            />\r\n                        </div>\r\n                        <Button \r\n                            viewStyle='back_to_location'\r\n                            onClick={() => mapRef.current.setCenter([x, y], 15, { duration: 250 })}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        (x !== undefined && y !== undefined) && <Placemark geometry={[x, y]} options={{\r\n                            iconLayout: 'default#image',\r\n                            iconImageHref: userLocation,\r\n                            iconImageSize: [18, 18],\r\n                            pixelRendering: 'static'\r\n                        }} />\r\n                    }\r\n                    {\r\n                        (x !== undefined && y !== undefined) && <ConnectedCreateRoute route = {routeState} x = {x} y = {y} />     \r\n                    }\r\n                     \r\n                </Map>\r\n            </YMaps> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect()(YandexMap)","import { Position } from '../types/types';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useLocation = () => {\r\n    const [position, setPosition] = useState<Position>();\r\n    const [error, setError] = useState<string>();\r\n\r\n    useEffect(() => {\r\n        const geo = window.navigator.geolocation;\r\n\r\n        const onChange = (pos: any) => {\r\n            setPosition({x: pos.coords.latitude, y: pos.coords.longitude})\r\n        }\r\n\r\n        const onError = () => {\r\n            setError('Error in getting geolocation')\r\n        }\r\n        \r\n        if (!geo) {\r\n            setError('Geolocation is not supported by browser')\r\n            return;\r\n        }\r\n\r\n        const watcher = geo.watchPosition(onChange, onError);\r\n\r\n        return () => geo.clearWatch(watcher)\r\n    }, []);\r\n\r\n    return { ...position, error };\r\n}\r\n\r\nexport { useLocation }","import { connect } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Button from '../../common/Button/Button';\r\nimport PopOverTopMenu from '../../common/PopOverTopMenu/PopOverTopMenu';\r\nimport YandexMap from '../../common/YandexMap/YandexMap';\r\nimport styles from './PreviewMap.module.css';\r\n\r\nimport { PointInfo } from '../../model/types';\r\nimport { useState } from 'react';\r\n\r\nconst PreviewMap = () => {\r\n    const [route, setRoute] = useState<Array<PointInfo>>([]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className={styles.preview_map}>\r\n            <div className={styles.top_menu}>\r\n                <div className={styles.header_metric}>Весь маршрут (примерно)</div>\r\n                <div className={styles.metric}>50 минут, 2 км</div>\r\n                <Button viewStyle='cancel' onClick={() => navigate(\"/previewtour\")} className={styles.button_close} />\r\n            </div>\r\n            <div className={styles.map_container}>\r\n                <YandexMap routeState={route}/>\r\n            </div>\r\n\r\n            <PopOverTopMenu state='editable' getRoute={(newRoute) => {setRoute(newRoute)}}/>\r\n        </div>\r\n    )\r\n}\r\n//67.22306%\r\n//89.378%\r\nexport default connect()(PreviewMap)","import ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport { store } from './model/store';\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport TourSelect from './routes/tourSelect/TourSelect';\r\nimport PreviewTour from './routes/previewTour/PreviewTour';\r\nimport PreviewMap from './routes/previewMap/PreviewMap';\r\n\r\nconst rootElement = document.getElementById('root')\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <Routes>\r\n                \r\n                <Route path=\"/\" element={<TourSelect />} />\r\n                <Route path=\"previewtour\" element={<PreviewTour />} />\r\n                <Route path=\"previewmap\" element={<PreviewMap />} />\r\n\r\n            </Routes>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    rootElement\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview_tour_container\":\"PreviewTour_preview_tour_container__33ppy\",\"header\":\"PreviewTour_header__3VcKh\",\"tour_image\":\"PreviewTour_tour_image__1AAQf\",\"tour_name\":\"PreviewTour_tour_name__2lCrB\",\"tour_info_click\":\"PreviewTour_tour_info_click__18Vb4\",\"info_text\":\"PreviewTour_info_text__o88PA\",\"background_image\":\"PreviewTour_background_image__47jEL\",\"button_look\":\"PreviewTour_button_look__1wClX\",\"button_back\":\"PreviewTour_button_back__yw1A2\",\"info_places_list\":\"PreviewTour_info_places_list__3Jeh3\",\"info_container\":\"PreviewTour_info_container__ijVDz\",\"button_close\":\"PreviewTour_button_close__3OccO\",\"general_info\":\"PreviewTour_general_info__24UQx\",\"tour_info_header\":\"PreviewTour_tour_info_header__YUcQ_\",\"description\":\"PreviewTour_description__3bjHv\",\"place_card\":\"PreviewTour_place_card__3ZAid\",\"place_name\":\"PreviewTour_place_name__3Uvwe\",\"place_number\":\"PreviewTour_place_number__UNNyj\",\"place_image\":\"PreviewTour_place_image__2YpHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__22qa6\",\"main\":\"Button_main__3SL0h\",\"secondary\":\"Button_secondary__6PObN\",\"text_container\":\"Button_text_container__3xkl5\",\"with_image\":\"Button_with_image__2lrdp\",\"image\":\"Button_image__uI0XY\",\"text_container_gradient\":\"Button_text_container_gradient__1SS9B\",\"text_container_hide\":\"Button_text_container_hide__3z16d\",\"add\":\"Button_add__1qflz\",\"delete\":\"Button_delete__sQTjo\",\"delete_outline\":\"Button_delete_outline__3yju6\",\"hint\":\"Button_hint__2hlB0\",\"back\":\"Button_back__tHwXB\",\"cancel\":\"Button_cancel__215fw\",\"info\":\"Button_info__36_e-\",\"info_white\":\"Button_info_white__11X2B\",\"location\":\"Button_location__1EvYR\",\"plus\":\"Button_plus__2rCNW\",\"minus\":\"Button_minus__16Q3D\",\"back_to_location\":\"Button_back_to_location__2LTB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tour_select\":\"TourSelect_tour_select__3DQmZ\",\"header_container\":\"TourSelect_header_container__g9tZ7\",\"header_top\":\"TourSelect_header_top__1AJ1V\",\"header_bot\":\"TourSelect_header_bot__3cQEP\",\"placemark_image\":\"TourSelect_placemark_image__36EI7\",\"town_name\":\"TourSelect_town_name__2U6Na\",\"header_text\":\"TourSelect_header_text__2sKmK\",\"tour_info_container\":\"TourSelect_tour_info_container__158K-\",\"tour_name\":\"TourSelect_tour_name__29CNm\",\"tour_info\":\"TourSelect_tour_info__3-TH7\",\"tour_images_container\":\"TourSelect_tour_images_container__k7Ddc\",\"tour_image\":\"TourSelect_tour_image__12oBU\",\"finished_mark\":\"TourSelect_finished_mark__3djyc\",\"tour_image_active\":\"TourSelect_tour_image_active__1iQ5K\",\"slider_container\":\"TourSelect_slider_container__l5VHI\",\"tour_point\":\"TourSelect_tour_point__1MJwe\",\"tour_point_active\":\"TourSelect_tour_point_active__3YWDz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"place_panel\":\"PlacePanel_place_panel__2K_gt\",\"place_info\":\"PlacePanel_place_info__AI5IM\",\"name\":\"PlacePanel_name__1aJVG\",\"address\":\"PlacePanel_address__sj9FF\",\"number__default\":\"PlacePanel_number__default__3wBZa\",\"number__disabled\":\"PlacePanel_number__disabled__22kDR\",\"number__deleted\":\"PlacePanel_number__deleted__2eVeb\",\"checkbox__default\":\"PlacePanel_checkbox__default__3ykMb\",\"checkbox__active\":\"PlacePanel_checkbox__active__1nJUo\",\"checkbox__none\":\"PlacePanel_checkbox__none__3aVev\",\"img_default\":\"PlacePanel_img_default__1pCC2\",\"img_active\":\"PlacePanel_img_active__1gIE4\",\"img_deleted\":\"PlacePanel_img_deleted__2Rojs\",\"main_img\":\"PlacePanel_main_img__1fU6Y\",\"blackout\":\"PlacePanel_blackout__2zQH8\"};"],"sourceRoot":""}